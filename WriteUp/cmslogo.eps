%!PS-Adobe-3.0
%%Creator: xpdf/pdftops 3.00
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: plain 395 396 0 () ()
%%BoundingBox: 0 0 395 396
%%Pages: 1
%%EndComments
%%BeginDefaults
%%PageMedia: plain
%%EndDefaults
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% separation convention operators
/findcmykcustomcolor where {
  pop
}{
  /findcmykcustomcolor { 5 array astore } def
} ifelse
/setcustomcolor where {
  pop
}{
  /setcustomcolor {
    exch
    [ exch /Separation exch dup 4 get exch /DeviceCMYK exch
      0 4 getinterval cvx
      [ exch /dup load exch { mul exch dup } /forall load
        /pop load dup ] cvx
    ] setcolorspace setcolor
  } def
} ifelse
/customcolorimage where {
  pop
}{
  /customcolorimage {
    gsave
    [ exch /Separation exch dup 4 get exch /DeviceCMYK exch
      0 4 getinterval
      [ exch /dup load exch { mul exch dup } /forall load
        /pop load dup ] cvx
    ] setcolorspace
    10 dict begin
      /ImageType 1 def
      /DataSource exch def
      /ImageMatrix exch def
      /BitsPerComponent exch def
      /Height exch def
      /Width exch def
      /Decode [1 0] def
    currentdict end
    image
    grestore
  } def
} ifelse
% PDF color state
/sCol {
  pdfLastStroke not {
    pdfStroke aload length
    dup 1 eq {
      pop setgray
    }{
      dup 3 eq {
        pop setrgbcolor
      }{
        4 eq {
          setcmykcolor
        }{
          findcmykcustomcolor exch setcustomcolor
        } ifelse
      } ifelse
    } ifelse
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
/fCol {
  pdfLastFill not {
    pdfFill aload length
    dup 1 eq {
      pop setgray
    }{
      dup 3 eq {
        pop setrgbcolor
      }{
        4 eq {
          setcmykcolor
        }{
          findcmykcustomcolor exch setcustomcolor
        } ifelse
      } ifelse
    } ifelse
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q { end grestore } def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% color operators
/g { dup 1 array astore /pdfFill exch def setgray
     /pdfLastFill true def /pdfLastStroke false def } def
/G { dup 1 array astore /pdfStroke exch def setgray
     /pdfLastStroke true def /pdfLastFill false def } def
/rg { 3 copy 3 array astore /pdfFill exch def setrgbcolor
      /pdfLastFill true def /pdfLastStroke false def } def
/RG { 3 copy 3 array astore /pdfStroke exch def setrgbcolor
      /pdfLastStroke true def /pdfLastFill false def } def
/k { 4 copy 4 array astore /pdfFill exch def setcmykcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/K { 4 copy 4 array astore /pdfStroke exch def setcmykcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/ck { 6 copy 6 array astore /pdfFill exch def
      findcmykcustomcolor exch setcustomcolor
      /pdfLastFill true def /pdfLastStroke false def } def
/CK { 6 copy 6 array astore /pdfStroke exch def
      findcmykcustomcolor exch setcustomcolor
      /pdfLastStroke true def /pdfLastFill false def } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImSep {
  findcmykcustomcolor exch
  dup /Width get /pdfImBuf1 exch string def
  dup /Decode get aload pop 1 index sub /pdfImDecodeRange exch def
  /pdfImDecodeLow exch def
  begin Width Height BitsPerComponent ImageMatrix DataSource end
  /pdfImData exch def
  { pdfImData pdfImBuf1 readstring pop
    0 1 2 index length 1 sub {
      1 index exch 2 copy get
      pdfImDecodeRange mul 255 div pdfImDecodeLow add round cvi
      255 exch sub put
    } for }
  6 5 roll customcolorimage
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
395 396 false pdfSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageOrientation: Portrait
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
0 g
0 G
q
[0.1 0 0 0.1 0 0] cm
q
1 i
15 w
4 M
20.8088 978.991 m
20.8088 978.991 896.09 1027.33 979.214 46.1599 c
980.895 26.333 980.895 26.333 980.895 26.333 c
-88.4861 26.333 20.8088 25.7139 20.8088 25.7139 c
20.8088 978.991 l
h
S
24 w
20.6008 27.5898 m
20.6006 27.5898 3853.93 21.1658 3926.64 21.0598 c
3926.64 21.0598 3926.74 30.1108 3920.02 111.197 c
3600 3970 20.6008 3925.64 20.6008 3925.64 c
20.6008 27.5898 l
h
S
20.8088 2307.6 m
20.8088 2307.6 2115.04 2423.25 2313.92 75.675 c
2317.95 28.2358 2317.95 28.2358 2317.95 28.2358 c
-240.693 28.2358 20.8088 26.7549 20.8088 26.7549 c
20.8088 2307.6 l
h
S
20.8088 1552.53 m
20.8088 1552.53 1422.13 1629.92 1555.22 59.073 c
1557.91 27.3289 1557.91 27.3289 1557.91 27.3289 c
-154.171 27.3289 20.8088 26.3389 20.8088 26.3389 c
20.8088 1552.53 l
h
S
20.8088 1029.58 m
20.8088 1029.58 942.16 1080.47 1029.66 47.6519 c
1031.43 26.781 1031.43 26.781 1031.43 26.781 c
-94.239 26.781 20.8088 26.1299 20.8088 26.1299 c
20.8088 1029.58 l
h
S
20.6008 479.141 m
20.6006 479.141 435.206 502.038 474.58 37.2749 c
475.377 27.884 475.377 27.884 475.377 27.884 c
-31.1702 27.884 20.6008 27.5898 20.6008 27.5898 c
20.6008 479.141 l
h
S
20.1838 24.949 m
20.1838 272.848 l
20.1838 272.848 247.802 285.419 269.417 30.2649 c
269.856 25.1099 269.856 25.1099 269.856 25.1099 c
20.416 25.1099 20.1838 24.949 20.1838 24.949 c
S
1006.81 2668.35 m
929.958 2617.11 829.923 2598.81 737.207 2598.81 c
468.82 2598.81 307.788 2768.38 307.788 3035.55 c
307.788 3310.04 510.298 3466.19 767.706 3466.19 c
856.761 3466.19 948.257 3445.45 1029.99 3410.07 c
1017.79 3379.57 1010.47 3347.86 1004.37 3316.14 c
995.835 3314.92 l
978.755 3336.88 888.48 3419.83 762.826 3419.83 c
538.357 3419.83 427.342 3238.06 427.342 3030.67 c
427.342 2796.44 561.536 2646.39 754.286 2646.39 c
886.04 2646.39 988.515 2724.46 1012.91 2745.2 c
1006.81 2668.35 l
f
10 w
1 G
1006.81 2668.35 m
929.958 2617.11 829.923 2598.81 737.207 2598.81 c
468.82 2598.81 307.788 2768.38 307.788 3035.55 c
307.788 3310.04 510.298 3466.19 767.706 3466.19 c
856.761 3466.19 948.257 3445.45 1029.99 3410.07 c
1017.79 3379.57 1010.47 3347.86 1004.37 3316.14 c
995.835 3314.92 l
978.755 3336.88 888.48 3419.83 762.826 3419.83 c
538.357 3419.83 427.342 3238.06 427.342 3030.67 c
427.342 2796.44 561.536 2646.39 754.286 2646.39 c
886.04 2646.39 988.515 2724.46 1012.91 2745.2 c
1006.81 2668.35 l
h
S
1999.88 3447.89 m
2031.59 3146.56 2065.75 2846.46 2098.69 2613.45 c
2076.73 2614.67 2059.65 2617.11 2041.35 2617.11 c
2021.83 2617.11 2002.32 2614.67 1984.02 2613.45 c
1963.28 2858.66 1938.88 3122.17 1921.8 3242.94 c
1780.29 2990.41 1675.37 2795.22 1602.17 2626.87 c
1588.76 2626.87 l
1521.66 2764.72 l
1443.58 2925.75 1358.19 3084.35 1275.23 3242.94 c
1248.39 3005.05 1215.45 2763.5 1215.45 2613.45 c
1199.59 2614.67 1186.18 2617.11 1172.76 2617.11 c
1156.9 2617.11 1143.48 2614.67 1128.84 2613.45 c
1160.56 2809.86 1233.75 3319.8 1245.95 3447.89 c
1277.67 3447.89 l
1375.27 3253.92 1492.38 3024.57 1622.91 2808.64 c
1738.81 3017.25 1851.04 3229.52 1974.26 3447.89 c
1999.88 3447.89 l
f
1999.88 3447.89 m
2031.59 3146.56 2065.75 2846.46 2098.69 2613.45 c
2076.73 2614.67 2059.65 2617.11 2041.35 2617.11 c
2021.83 2617.11 2002.32 2614.67 1984.02 2613.45 c
1963.28 2858.66 1938.88 3122.17 1921.8 3242.94 c
1780.29 2990.41 1675.37 2795.22 1602.17 2626.87 c
1588.76 2626.87 l
1521.66 2764.72 l
1443.58 2925.75 1358.19 3084.35 1275.23 3242.94 c
1248.39 3005.05 1215.45 2763.5 1215.45 2613.45 c
1199.59 2614.67 1186.18 2617.11 1172.76 2617.11 c
1156.9 2617.11 1143.48 2614.67 1128.84 2613.45 c
1160.56 2809.86 1233.75 3319.8 1245.95 3447.89 c
1277.67 3447.89 l
1375.27 3253.92 1492.38 3024.57 1622.91 2808.64 c
1738.81 3017.25 1851.04 3229.52 1974.26 3447.89 c
1999.88 3447.89 l
h
S
2249.91 2778.14 m
2297.49 2700.07 2352.39 2651.27 2447.54 2651.27 c
2546.36 2651.27 2617.12 2733 2617.12 2829.38 c
2617.12 3056.29 2235.27 2956.25 2235.27 3231.96 c
2235.27 3389.33 2359.71 3466.19 2506.1 3466.19 c
2564.66 3466.19 2635.42 3447.89 2680.55 3407.63 c
2665.91 3375.91 2657.37 3341.75 2647.61 3307.6 c
2635.42 3307.6 l
2609.8 3373.47 2556.12 3413.73 2484.14 3413.73 c
2399.97 3413.73 2330.43 3357.61 2330.43 3271 c
2330.43 3046.53 2714.71 3136.8 2714.71 2876.96 c
2714.71 2702.51 2579.3 2598.81 2413.39 2598.81 c
2353.61 2598.81 2256.01 2624.43 2214.54 2669.57 c
2226.73 2704.95 2232.83 2741.54 2237.72 2778.14 c
2249.91 2778.14 l
f
2249.91 2778.14 m
2297.49 2700.07 2352.39 2651.27 2447.54 2651.27 c
2546.36 2651.27 2617.12 2733 2617.12 2829.38 c
2617.12 3056.29 2235.27 2956.25 2235.27 3231.96 c
2235.27 3389.33 2359.71 3466.19 2506.1 3466.19 c
2564.66 3466.19 2635.42 3447.89 2680.55 3407.63 c
2665.91 3375.91 2657.37 3341.75 2647.61 3307.6 c
2635.42 3307.6 l
2609.8 3373.47 2556.12 3413.73 2484.14 3413.73 c
2399.97 3413.73 2330.43 3357.61 2330.43 3271 c
2330.43 3046.53 2714.71 3136.8 2714.71 2876.96 c
2714.71 2702.51 2579.3 2598.81 2413.39 2598.81 c
2353.61 2598.81 2256.01 2624.43 2214.54 2669.57 c
2226.73 2704.95 2232.83 2741.54 2237.72 2778.14 c
2249.91 2778.14 l
h
S
90 w
1 J
1 j
47.9548 55.0779 m
47.9548 55.0776 513.418 1062.72 1784.13 1358.59 c
2516.04 1529 3216.04 1922.34 3536.04 2295.67 c
S
3477.92 3236.42 m
3477.92 3236.42 2697.92 2323.09 1483.46 1622.59 c
254.749 913.877 47.9548 55.0779 47.9548 55.0779 c
S
47.9548 55.0779 m
47.9548 55.0776 558.609 922.533 1594.19 864.157 c
2410.52 818.145 3146.11 1136.49 3376.2 1612.16 c
S
47.9548 55.0779 m
47.9548 55.0776 452.983 754.726 1714.49 470.665 c
2856.19 213.585 2928.46 549.92 3108.46 743.253 c
S
48 w
0 G
47.9548 55.0779 m
47.9548 55.0776 513.418 1062.72 1784.13 1358.59 c
2516.04 1529 3216.04 1922.34 3536.04 2295.67 c
S
3477.92 3236.42 m
3477.92 3236.42 2697.92 2323.09 1483.46 1622.59 c
254.749 913.877 47.9548 55.0779 47.9548 55.0779 c
S
47.9548 55.0779 m
47.9548 55.0776 558.609 922.533 1594.19 864.157 c
2410.52 818.145 3146.11 1136.49 3376.2 1612.16 c
S
47.9548 55.0779 m
47.9548 55.0776 452.983 754.726 1714.49 470.665 c
2856.19 213.585 2928.46 549.92 3108.46 743.253 c
S
30 w
0 J
0 j
20.2678 28.9907 3908.74 3908.75 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
